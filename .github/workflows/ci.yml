name: Django CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8 linting
        run: flake8 .

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t django-app:latest .

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install docker-compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Run unit tests inside container
        run: |
          docker-compose up -d
          docker-compose exec -T web python manage.py test
          docker-compose down

  integration-tests:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Placeholder for integration tests
        run: echo "Integration tests will be implemented later."

  notify:
    name: Notify on Failure
    needs: build
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Check Workflow Status
        run: |
          if [[ "${{ job.status }}" != "success" ]]; then
            echo "CI/CD pipeline failed. Sending notification..."
            echo "failure"
          else
            echo "success"
          fi

      - name: Send GitHub Notification on Failure
        if: ${{ failure() }}  # Only runs if the workflow has failed
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: '${{ github.repository_owner }}',
              repo: '${{ github.event.repository.name }}',
              body: 'ERROR: Django CI/CD pipeline failed. Please check the logs and fix any issues.'
            })
